#!/usr/bin/env python3

import tkinter as tk
from tkinter import messagebox, scrolledtext
import subprocess

def generate_and_run():
    service_name = entry_service.get().strip()
    backend_url = entry_backend.get().strip()
    cert_host = entry_cert.get().strip()
    
    if not service_name or not backend_url or not cert_host:
        messagebox.showerror("Error", "Please fill in all fields!")
        return
    
    # Combined bash commands
    combined_script = f"""#!/bin/bash
echo "=== SERVER STATUS ==="
systemctl status {service_name}

echo ""
echo "=== BACKEND CONNECTION ==="
curl -I {backend_url}

echo ""
echo "=== CERTIFICATE VALIDITY ==="
echo | openssl s_client -connect {cert_host}:443 2>/dev/null | openssl x509 -noout -enddate
"""
    # Save combined script
    script_path = "check_all.sh"
    with open(script_path, "w") as f:
        f.write(combined_script)
    
    # Make it executable
    subprocess.run(["chmod", "+x", script_path])
    
    # Execute script and capture output
    try:
        result = subprocess.run(["/bin/bash", script_path], capture_output=True, text=True, check=True)
        output_box.delete("1.0", tk.END)
        output_box.insert(tk.END, result.stdout)
        messagebox.showinfo("Success", "Script executed successfully!")
    except subprocess.CalledProcessError as e:
        output_box.delete("1.0", tk.END)
        output_box.insert(tk.END, e.stderr)
        messagebox.showerror("Execution Error", "Script execution failed!")

# Tkinter GUI
root = tk.Tk()
root.title("Linux Server Checker")

# Labels
tk.Label(root, text="Linux Service Name:").grid(row=0, column=0, sticky="e", padx=5, pady=5)
tk.Label(root, text="Backend URL:").grid(row=1, column=0, sticky="e", padx=5, pady=5)
tk.Label(root, text="Certificate Host:").grid(row=2, column=0, sticky="e", padx=5, pady=5)

# Entry fields
entry_service = tk.Entry(root, width=40)
entry_service.grid(row=0, column=1, padx=5, pady=5)
entry_backend = tk.Entry(root, width=40)
entry_backend.grid(row=1, column=1, padx=5, pady=5)
entry_cert = tk.Entry(root, width=40)
entry_cert.grid(row=2, column=1, padx=5, pady=5)

# Generate and run button
tk.Button(root, text="Generate & Execute", command=generate_and_run, bg="green", fg="white").grid(row=3, column=0, columnspan=2, pady=10)

# Output box
output_box = scrolledtext.ScrolledText(root, width=80, height=20)
output_box.grid(row=4, column=0, columnspan=2, padx=10, pady=10)

root.mainloop()
