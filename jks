import datetime
import subprocess
import os
from flask import Flask, render_template_string

app = Flask(__name__)

# Define the path to the Java Keystore (JKS) file and its password
keystore_path = "your_keystore.jks"
keystore_password = "your_keystore_password"

# Function to extract certificate information from the JKS file
def extract_certificate_info(keystore_path, keystore_password):
    try:
        # Run the keytool command to list certificates in the JKS file
        cmd = [
            "keytool",
            "-list",
            "-v",
            "-keystore", keystore_path,
            "-storepass", keystore_password
        ]
        result = subprocess.check_output(cmd, universal_newlines=True, stderr=subprocess.STDOUT)

        # Parse the keytool output to extract certificate information
        certificates = []
        lines = result.split('\n')
        for line in lines:
            if line.startswith("Alias name:"):
                alias = line.split(':')[1].strip()
            elif line.startswith("Valid from:"):
                valid_from = line.split(':')[1].strip()
            elif line.startswith("Valid until:"):
                valid_until = line.split(':')[1].strip()
                status = "Valid"
                due_date = valid_until
                current_date = datetime.datetime.now()
                valid_until_date = datetime.datetime.strptime(valid_until, "%Y-%m-%d")
                if current_date > valid_until_date:
                    status = "Expired"
                certificates.append({
                    "alias": alias,
                    "status": status,
                    "valid_from": valid_from,
                    "due_date": due_date
                })

        return certificates
    except Exception as e:
        return [{"error": str(e)}]

# Route to display certificate status in a webpage
@app.route('/')
def status():
    certificate_info = extract_certificate_info(keystore_path, keystore_password)

    return render_template_string(
        """
        <!DOCTYPE html>
        <html>
        <head>
            <title>BMW Certificate Portal</title>
            <meta http-equiv="refresh" content="36000"> <!-- Refresh every 10 hours -->
            <style>
                body {
                    text-align: center;
                }
                h1 {
                    color: blue;
                }
                table {
                    margin: 0 auto;
                    width: 80%;
                    border-collapse: collapse;
                }
                th, td {
                    border: 1px solid black;
                    padding: 8px;
                    text-align: center;
                }
                tr.expired {
                    color: red;
                    font-weight: bold;
                }
            </style>
        </head>
        <body>
            <h1>BMW Certificate Portal</h1>
            <table>
                <tr>
                    <th>MAL Code</th>
                    <th>Env</th>
                    <th>Name</th>
                    <th>Status</th>
                    <th>Due Date</th>
                </tr>
                {% for cert in certificate_info %}
                <tr class="{% if cert.status == 'Expired' %}expired{% endif %}">
                    <td>{{ cert.alias }}</td>
                    <td>{{ cert.env }}</td>
                    <td>{{ cert.name }}</td>
                    <td>{{ cert.status }}</td>
                    <td>{{ cert.due_date }}</td>
                </tr>
                {% endfor %}
            </table>
        </body>
        </html>
        """,
        certificate_info=certificate_info,
    )

if __name__ == '__main__':
    app.run(debug=True)
